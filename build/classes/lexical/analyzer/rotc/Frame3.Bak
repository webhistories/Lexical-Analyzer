/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lexical.analyzer.rotc;


import javax.swing.text.AttributeSet;
import java.util.ArrayList;
import javax.swing.text.StyleConstants;

/**
 *
 * @author PC
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jMenu1 = new javax.swing.JMenu();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        SourceTxt = new javax.swing.JTextArea();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        LexicalTbl = new javax.swing.JTable();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        ErrorTxt = new javax.swing.JEditorPane();
        RunBtn = new javax.swing.JButton();
        ClearBtn = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenu1.setText("jMenu1");

        jMenu2.setText("File");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SourceTxt.setColumns(20);
        SourceTxt.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        SourceTxt.setRows(5);
        jScrollPane1.setViewportView(SourceTxt);

        jTabbedPane1.addTab("Source", jScrollPane1);

        LexicalTbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LexicalTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lexeme", "Token"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(LexicalTbl);

        jTabbedPane2.addTab("Lexical Table", jScrollPane3);

        ErrorTxt.setContentType("text/html");
        jScrollPane2.setViewportView(ErrorTxt);

        jTabbedPane3.addTab("Error", jScrollPane2);

        RunBtn.setText("Run");
        RunBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RunBtnMouseClicked(evt);
            }
        });
        RunBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunBtnActionPerformed(evt);
            }
        });

        ClearBtn.setText("Clear");

        ExitBtn.setText("Exit");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RunBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jTabbedPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ClearBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RunBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ExitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExitBtnActionPerformed

    private void RunBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RunBtnActionPerformed

    
 // creates a class and use it to populate the arraylist
    public class Lexical{
       public String Lexeme;
       public String Token;
        public Lexical(String Lexeme, String Token)
        {
            this.Lexeme = Lexeme;
            this.Token = Token;
        
        }
    }

    
// creates a list from functions
    public ArrayList ListLexical()
    {
        char[] chars = SourceTxt.getText().toCharArray();
        
        String id="";
       String fontfamily = ErrorTxt.getFont().getFamily();//font for error list
       int i = 0, flag = 0, IdentifierCount=0;
      ArrayList<Lexical> list = new ArrayList<Lexical>();
      list.add(new Lexical("", ""));
   
      
     while(flag==0){
      
      IdentifierCount=0;
      if(chars[i]=='a'){
          flag = 1;
           while(flag==1){
               flag=1;
               id = String.valueOf(chars[i]);
                 i++;
                 if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;
                    }//if
                if(chars[i]=='s'){
                 id = id.concat(String.valueOf(chars[i]));
                 i++;
                  if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;
                    }//if
                }
 //=========================================================ATTENTION=========/
                else if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============ATTENTION DELIMITER==========
                if(chars[i]==':'){
                i++;
                    if(i==(chars.length) ||chars[i]==':'){
                        list.add(new Lexical("attention","attention"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("attention","attention"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER OF ASSEMBLE
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. ':' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if
 //===========================================================================
                else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                if(chars[i]=='s'){
                id = id.concat(String.valueOf(chars[i]));
                i++;
                if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;
                    }//if
                }
                else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                 if(chars[i]=='e'){
                  id = id.concat(String.valueOf(chars[i]));
                 i++;
                 if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;
                    }//if
                 }
                  else{
                     IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                  if(chars[i]=='m'){
                    id = id.concat(String.valueOf(chars[i]));
                  i++;
                  if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;
                    }//if
                  }
                   else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                 if(chars[i]=='b'){
                 id = id.concat(String.valueOf(chars[i]));
                  i++;
                  if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;
                    }//if
                 }
                  else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                  if(chars[i]=='l'){
                 id = id.concat(String.valueOf(chars[i]));
                   i++;
                   if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;
                    }//if
                  }
                  else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                   if(chars[i]=='e'){
                 id = id.concat(String.valueOf(chars[i]));
                 i++;
                 
                    if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found. '[SPACE]' is expected.");
                        break;
                    }
                   
                   }
                    else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                 if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("assemble","assemble"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("assemble","assemble"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER OF ASSEMBLE
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character.");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. [SPACE] is expected. s");
                
             break;
                 }
                 else{
                     System.out.print("HERE: "+id+" ");
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                 
      }//while flag=1
         //  System.out.print("id is: "+id+" ");
      }//if chars [i]
      //=====================================================BOOL=========
      else if(chars[i]=='b'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='l'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============BOOL DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("bool","bool"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("bool","bool"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if
    //=============================================================BOOL=======
         //=====================================================CHR=========
      else if(chars[i]=='c'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='h'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  //============CHR DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("chr","chr"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("chr","chr"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                
                }//if ch==r
 //=========================================================CHECKPONT=========/
                else if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='c'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='k'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='p'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
    if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============CHECKPOINT DELIMITER==========
                if(chars[i]==';'){
                i++;
                    if(i==(chars.length) ||chars[i]==';'){
                        list.add(new Lexical("checkpoint","checkpoint"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("checkpoint","checkpoint"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER OF ASSEMBLE
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. ';' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//else if ch==e
                
 //========================================================CHECKPOINT===================
                else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                }//if ch==h
 //=========================================================COMMAND=========/
                else if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='m'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  if(chars[i]=='m'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='a'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='d'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============COMMAND DELIMITER==========
                if(chars[i]=='('){
                i++;
                    if(i==(chars.length) ||chars[i]==';'){
                        list.add(new Lexical("command","command"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("command","command"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER OF ASSEMBLE
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '(' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==m
    
   //=====================================================CONST==============
   else if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}

  //============CONST DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("const","const"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("const","const"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER OF ASSEMBLE
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==n
   //================================================CONST==================
      //=====================================================COVER==============
   else if(chars[i]=='v'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}

  //============COVER DELIMITER==========
                if(chars[i]==';'){
                i++;
                    if(i==(chars.length) ||chars[i]==';'){
                        list.add(new Lexical("cover","cover"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("cover","cover"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. ';' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==v
   //=============================================COVER=======================
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                }//else if ch==o
                
 //========================================================COMMAND===================       
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
             
      }//while
      }//else if
    //=============================================================CHR=======
          //=====================================================DISMISS=========
      else if(chars[i]=='d'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='m'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){list.add(new Lexical("dismiss","dismiss")); flag=8;break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
   
  //============DISMISS DELIMITER==========
                if(chars[i]==' '||chars[i]=='\n'||chars[i]=='\t'
              ||chars[i]=='\r'){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]=='\n'||chars[i]=='\t'
              ||chars[i]=='\r'){
                        list.add(new Lexical("dismiss","dismiss"));
                         flag=8;
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("dismiss","dismiss"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter.");
                
             break;
                 }
         
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if char==d(i)smiss
   //=====================================================DO==============
   else if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  //============DO DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("do","do"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("do","do"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==o
   //=============================================DO=======================
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if
    //=============================================================DISMISS=======
          //=====================================================ELSE=========
      else if(chars[i]=='e'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='l'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  
  //============ELSE DELIMITER==========
                if(chars[i]==' '||chars[i]=='\n'||chars[i]=='\t'
              ||chars[i]=='\r'||chars[i]=='{'){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("else","else"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("else","else"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter.");
                
             break;
                 }
             //=====================================================elseif==============
   if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  if(chars[i]=='f'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  
  //============ELSEIF DELIMITER==========
                if(chars[i]=='('){
                i++;
                    if(i==(chars.length) ||chars[i]=='('){
                        list.add(new Lexical("elseif","elseif"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("elseif","elseif"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '(' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==ELSEIF
   //=============================================ELSEIF======================= else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                }//if char==else
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if char==else
  
               
   //=====================================================ENDMISSION==============
   else if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  if(chars[i]=='d'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
   if(chars[i]=='m'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
    if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
     if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
       if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
        if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
         if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  
  //============ENDMISSION DELIMITER==========
                if(chars[i]==' '||chars[i]=='\n'||chars[i]=='\t'||chars[i]=='\r'){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]=='\n'||chars[i]=='\t'||chars[i]=='\r'){
                        list.add(new Lexical("endmission","endmission"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("endmission","endmission"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==ENDMISSION
   //=============================================ENDMISSION======================= 
   //=====================================================ENDMISSION==============
   else if(chars[i]=='x'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
   if(chars[i]=='c'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
    if(chars[i]=='u'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
     if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
   
  //============EXECUTE DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("execute","execute"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("execute","execute"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==EXECUTE
   //=============================================EXECUTE=======================   
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if char==else
    //=============================================================ELSE=======
            //=====================================================FALLIN=========
      else if(chars[i]=='f'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='a'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='l'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='l'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
    if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============FALLIN DELIMITER==========
                if(chars[i]==' '||chars[i]=='\n'||chars[i]=='\t'||chars[i]=='\r'||chars[i]=='{'){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]=='{'||chars[i]=='\n'||chars[i]=='\t'||chars[i]=='\r'){
                        list.add(new Lexical("fallin","fallin"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("fallin","fallin"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '{' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if char==fall
         //=====================================================FALSE==============
   else if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============FALSE DELIMITER==========
                if(chars[i]==' '||chars[i]==';'||chars[i]==')'){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]==';'||chars[i]==')'){
                        list.add(new Lexical("false","false"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("false","false"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==FAL(S)E
   //=============================================FALSE=======================
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                }//if
   //=====================================================FLT==============
   else if(chars[i]=='l'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============FLT DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("flt","flt"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("flt","flt"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==flt
   //=============================================FLT=======================
   //=====================================================FOR==============
   else if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============FOR DELIMITER==========
                if(chars[i]==' '||chars[i]=='('){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]=='('){
                        list.add(new Lexical("for","for"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("for","for"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '(' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==for
   //=============================================FOR=======================
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                
      }//while
      }//else if
    //=============================================================FALLIN=======
           //=====================================================IF=========
      else if(chars[i]=='i'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='f'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  //============IF DELIMITER==========
                if(chars[i]==' '||chars[i]=='('){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]=='('){
                        list.add(new Lexical("if","if"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("if","if"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '(' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if 
     //=====================================================INT==============
   else if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
  //============INT DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("int","int"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("int","int"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==o
   //=============================================INT=======================
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if char==if
    //=============================================================IF=======
            //=====================================================NULL=========
      else if(chars[i]=='n'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='u'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='l'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='l'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============NULL DELIMITER==========
                if(chars[i]==' '||chars[i]==';'||chars[i]=='('){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]==';'||chars[i]=='('){
                        list.add(new Lexical("null","null"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("null","null"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if
    //=============================================================NULL=======
      
            //=====================================================ONDUTY=========
      else if(chars[i]=='o'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='d'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='u'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
   if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
    if(chars[i]=='y'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============ONDUTY DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("onduty","onduty"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("onduty","onduty"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if
    //=============================================================ONDUTY=======
         //=====================================================REPORT=========
      else if(chars[i]=='r'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='p'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
   if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
    if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============REPORT DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("report","report"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("report","report"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if
    //=============================================================REPORT=======
   //=====================================================STARTMISSION=========
      else if(chars[i]=='s'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                        else if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='a'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
    if(chars[i]=='t'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      if(chars[i]=='m'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
        if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
          if(chars[i]=='s'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
            if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
              if(chars[i]=='o'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                
  //============STARTMISSION DELIMITER==========
                if(chars[i]==':'){
                i++;
                    if(i==(chars.length) ||chars[i]==':'){
                        list.add(new Lexical("startmission","startmission"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("startmission","startmission"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. ':' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
   }//IF CHAR== ST(A)RTMISSION
   //=====================================================STR==============
   else if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
  //============STR DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("str","str"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("str","str"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }// if ch==ST(R)
   //=============================================STR=======================
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                }//if char==s(t)artmission
      //=====================================================SURRENDER==============
   else if(chars[i]=='u'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
      if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
          if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
              if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                  if(chars[i]=='n'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                  
                      if(chars[i]=='d'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                          if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
                              if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============SURRENDER DELIMITER==========
                if(chars[i]==' '){
                i++;
                    if(i==(chars.length) ||chars[i]==' '){
                        list.add(new Lexical("surrender","surrender"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("surrender","surrender"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '[SPACE]' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//else if ch==s(u)rrender
   //=============================================surrender=======================
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if
    //=============================================================STARTMISSION=======
          //=====================================================TRUE=========
      else if(chars[i]=='t'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='r'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='u'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============TRUE DELIMITER==========
                if(chars[i]==' '||chars[i]==';'||chars[i]==')'){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]==';'||chars[i]==')'){
                        list.add(new Lexical("true","true"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("true","true"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if
    //=============================================================TRUE=======  
            //=====================================================BOOL=========
      else if(chars[i]=='w'){
                flag = 1;
           while(flag==1){
               flag=1;id = String.valueOf(chars[i]);i++;
             if(chars.length==i){//if no delimiter found
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;}//if
                             else if(chars[i]=='h'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}
   if(chars[i]=='i'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
    else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  if(chars[i]=='l'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
    if(chars[i]=='e'){id = id.concat(String.valueOf(chars[i]));i++;
  /**if no delim**/ if(chars.length==i){ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
  + "</span>. No delimiter found.");break;}}
   else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
  //============WHILE DELIMITER==========
                if(chars[i]==' '||chars[i]=='('){
                i++;
                    if(i==(chars.length) ||chars[i]==' '||chars[i]=='('){
                        list.add(new Lexical("while","while"));
                         flag=8;
                        System.out.print(flag);
                    break;
                    }
                    else{//IF THERE ARE MORE CHARACTERS AFTER RESERVED WORD
                    list.add(new Lexical("while","while"));
                    flag=0;
                    id="";
                    break;}
                 }
            else if(chars[i]!='a'&&chars[i]!='b'&&chars[i]!='c'&&chars[i]!='d'&&chars[i]!='e'
                &&chars[i]!='f'&&chars[i]!='g'&&chars[i]!='h'&&chars[i]!='i'&&chars[i]!='j'
                &&chars[i]!='k'&&chars[i]!='l'&&chars[i]!='m'&&chars[i]!='n'&&chars[i]!='o'
                &&chars[i]!='p'&&chars[i]!='q'&&chars[i]!='r'&&chars[i]!='s'&&chars[i]!='t'
                &&chars[i]!='u'&&chars[i]!='v'&&chars[i]!='w'&&chars[i]!='x'&&chars[i]!='y'
                &&chars[i]!='z'&&chars[i]!='_'){//ERROR TRAP FOR DELIMITER 
             ErrorTxt.setText("'"+chars[i]+"' is not a valid character");
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter. '(' is expected.");
                
             break;
                 }
                 else{
                    IdentifierCount++;
                    flag=3;
                    break; //proceed to identifier
                }
                }//if
                 else{IdentifierCount++;flag=3;break; /**proceed to identifier**/}
      }//while
      }//else if char==while
    //=============================================================WHILE=======
      else if(chars[i]=='g'||chars[i]=='h'||chars[i]=='j'
           ||chars[i]=='k'||chars[i]=='l'||chars[i]=='m'
           ||chars[i]=='p'||chars[i]=='q'
           ||chars[i]=='u'||chars[i]=='v'||chars[i]=='x'||chars[i]=='y'
           ||chars[i]=='z'){
          flag=3;
          IdentifierCount++;
      }
      else if(chars[i]=='='||chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
            chars[i]=='%'||chars[i]=='<'||chars[i]=='>'||chars[i]=='!')
            {
                if(chars[i]=='+'&&chars[i+1]=='+'||
                   chars[i]=='-'&&chars[i+1]=='-'||
                   chars[i+1]=='='||chars[i]=='<'&&chars[i+1]=='<'||
                   chars[i]=='>'&&chars[i+1]=='>'){
                    id = id.concat(String.valueOf(chars[i]));
                    id = id.concat(String.valueOf(chars[i+1]));
              list.add(new Lexical(id, id));
              i++;
                 System.out.print("char:"+chars[i]+" ");
                 //System.out.print("HERE:"+chars[i+1]);
              if((i+1)==chars.length)       
              break;
      
                }
                
               /** else{  
              id = id.concat(String.valueOf(chars[i]));
      //        System.out.print("HERE:"+chars[i]);
              list.add(new Lexical(id, id));
              i++;
                }
                
              if(i==chars.length)       
              break;
              else{
                  id="";
                 flag=0;}**/
              else{
               System.out.print("char:"+chars[i]+" ");
              if(i+1==chars.length){
                  id = id.concat(String.valueOf(chars[i]));
                  list.add(new Lexical(id,id));
              }
              else{
                 // i++;
                 id = id.concat(String.valueOf(chars[i]));
                  list.add(new Lexical(id,id));
              flag=0;
               id="";
              }
              
            }
            }
      
      
      else if(chars[i]==' '||chars[i]=='\n'||chars[i]=='{'||chars[i]=='}'||chars[i]==')'||chars[i]=='\t'
              ||chars[i]=='\r'||chars[i]=='('){
          i++; 
          System.out.print("SPACE"+i);
          if(i==chars.length){         
              break;
          }
         else
          flag=0;
      }
      else{
          id = id.concat(String.valueOf(chars[i]));
          flag=9;
      }
      
//=================== IDENTIFIER ==============================================
      if(flag==3){
     
          int check=1, checker=0;
         
           if(chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
          chars[i]=='%'||chars[i]=='!'||chars[i]=='<'||chars[i]=='>'||
                    chars[i]=='('||chars[i]==')'||chars[i]==';'||chars[i]==','||
                    chars[i]=='{'||chars[i]==' '||chars[i]=='\n'||chars[i]=='='||
                   chars[i]=='['){//DELIMITER
               //IF RESERVED WORD IS SLIGHTLY SIMILAR TO IDENTIFIER
                check=1;
            checker=0;
 //RESERVED OPERATORS========================================
            if(chars[i]=='='||chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
            chars[i]=='%'||chars[i]=='<'||chars[i]=='>'||chars[i]=='!')
            {
                //IF OUTPUT IS A+
              if(i+1==chars.length) {  
               list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i]));
              list.add(new Lexical(id, id));
              break;
              }
               else if(chars[i]=='+'&&chars[i+1]=='+'||
                   chars[i]=='-'&&chars[i+1]=='-'||
                   chars[i+1]=='='||chars[i]=='<'&&chars[i+1]=='<'||
                   chars[i]=='>'&&chars[i+1]=='>'){
                  
              list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i])); 
              id = id.concat(String.valueOf(chars[i+1])); 
            
              list.add(new Lexical(id, id));
              i++;
              checker=1;
              //LOGIC: IF A++ IS/IS NOT FOLLOWED BY ANOTHER STATEMENT
              if(i+1==chars.length)       
              break;
             else if(chars[i+1]==';'&&i==chars.length||chars[i+1]==')'&&i==chars.length||chars[i+1]==' '&&i==chars.length)
                 break;
             else if(chars[i+1]==';'&&i!=chars.length||chars[i+1]==')'&&i!=chars.length
                     ||chars[i+1]==' '&&i!=chars.length){
                 i = i+2;
                
                 id="";
                 flag=0;
              
             }
             else{
                 i = i+2;
                 id="";
                 flag=0;
              
             }
              ////END OF LOGIC
                 
                }
              else {
                   
                
              list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i]));
              list.add(new Lexical(id, id));
              
              i++;
              checker=1;
               System.out.print("I: "+i+" CHARSL: "+chars.length+" CHARS: "+chars[i]);
                //LOGIC: IF A++ IS/IS NOT FOLLOWED BY ANOTHER STATEMENT
                  
             if(chars[i]=='('&&i+1==chars.length||chars[i]==' '&&+1==chars.length)
                break;
            else if(chars[i+1]=='('&&i!=chars.length
                     ||chars[i+1]==' '&&i!=chars.length){
                 i++;
                
                 id="";
                 flag=0;
              
             }
             else{
               
                id="";
                flag=0;//CHECK NEXT IF DELIMITER IS NOT AN OPERATOR
             // checker=99;
              
             }
              ////END OF LOGIC
                }
              //break;
            }
            //===========================================================
            else{
               // System.out.print("ELSE"+chars[i]+" L:"+chars.length+" i:"+i);
               //i++;
              if(i+1==chars.length){
                  id = id.concat(String.valueOf(chars[i]));
                  list.add(new Lexical(id,"identifier"));
              }
              else{
                 // i++;
                 id = id.concat(String.valueOf(chars[i]));
                  list.add(new Lexical(id,"identifier"));
              flag=0;
               id="";
              }
              
               //break;
             //  check=0;
            }
                 }//IF RESERVED SYMBOL
          
           else {//IF IDENTIFIER
              
               if(i+1==chars.length) {
                  id = id.concat(String.valueOf(chars[i]));
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                break;
               }
               else{
                    System.out.print("chedhdj"+chars[i]);
               check=0;}
       
           }
          while(check==0){
             
            if(chars[i]=='a'||chars[i]=='b'||chars[i]=='c'||chars[i]=='d'||chars[i]=='e'
           ||chars[i]=='f'||chars[i]=='g'||chars[i]=='h'||chars[i]=='i'||chars[i]=='j'
           ||chars[i]=='k'||chars[i]=='l'||chars[i]=='m'||chars[i]=='n'||chars[i]=='o'
           ||chars[i]=='p'||chars[i]=='q'||chars[i]=='r'||chars[i]=='s'||chars[i]=='t'
           ||chars[i]=='u'||chars[i]=='v'||chars[i]=='w'||chars[i]=='x'||chars[i]=='y'
           ||chars[i]=='z'||chars[i]=='_'||
             chars[i]=='A'||chars[i]=='B'||chars[i]=='C'||chars[i]=='D'||chars[i]=='E'
           ||chars[i]=='F'||chars[i]=='G'||chars[i]=='H'||chars[i]=='I'||chars[i]=='J'
           ||chars[i]=='K'||chars[i]=='L'||chars[i]=='M'||chars[i]=='N'||chars[i]=='O'
           ||chars[i]=='P'||chars[i]=='Q'||chars[i]=='R'||chars[i]=='S'||chars[i]=='T'
           ||chars[i]=='U'||chars[i]=='V'||chars[i]=='W'||chars[i]=='X'||chars[i]=='Y'
           ||chars[i]=='Z'||chars[i]=='1'||chars[i]=='2'||chars[i]=='3'||chars[i]=='4'||chars[i]=='5'
                    ||chars[i]=='6'||chars[i]=='7'||chars[i]=='8'||chars[i]=='9'){
            id = id.concat(String.valueOf(chars[i]));
            i++;
           
            IdentifierCount++;
             if(i+1==chars.length){//if no delimiter found
           System.out.print("Here"+i+" "+chars[i]);
                     ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. No delimiter found.");
                        break;
                    }
             else if(chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
          chars[i]=='%'||chars[i]=='!'||chars[i]=='<'||chars[i]=='>'||
                    chars[i]=='('||chars[i]==')'||chars[i]==';'||chars[i]==','||
                    chars[i]=='{'||chars[i]==' '||chars[i]=='\n'||chars[i]=='='||
                   chars[i]=='['){//DELIMITER
               //IF RESERVED WORD IS SLIGHTLY SIMILAR TO IDENTIFIER
                check=1;
            checker=0;
 //RESERVED OPERATORS========================================
            if(chars[i]=='='||chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
            chars[i]=='%'||chars[i]=='<'||chars[i]=='>'||chars[i]=='!')
            {
                //IF OUTPUT IS A+
              if(i+1==chars.length) {  
               list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i]));
              list.add(new Lexical(id, id));
              break;
              }
               else if(chars[i]=='+'&&chars[i+1]=='+'||
                   chars[i]=='-'&&chars[i+1]=='-'||
                   chars[i+1]=='='||chars[i]=='<'&&chars[i+1]=='<'||
                   chars[i]=='>'&&chars[i+1]=='>'){
                  
              list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i])); 
              id = id.concat(String.valueOf(chars[i+1])); 
            
              list.add(new Lexical(id, id));
              i++;
              checker=1;
              //LOGIC: IF A++ IS/IS NOT FOLLOWED BY ANOTHER STATEMENT
              if(i+1==chars.length)       
              break;
             else if(chars[i+1]==';'&&i==chars.length||chars[i+1]==')'&&i==chars.length||chars[i+1]==' '&&i==chars.length)
                 break;
             else if(chars[i+1]==';'&&i!=chars.length||chars[i+1]==')'&&i!=chars.length
                     ||chars[i+1]==' '&&i!=chars.length){
                 i = i+2;
                
                 id="";
                 flag=0;
              
             }
             else{
                 i = i+2;
                 id="";
                 flag=0;
              
             }
              ////END OF LOGIC
                 
                }
              else {
                   
                
              list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i]));
              list.add(new Lexical(id, id));
              
              i++;
              checker=1;
               System.out.print("I: "+i+" CHARSL: "+chars.length+" CHARS: "+chars[i]);
                //LOGIC: IF A++ IS/IS NOT FOLLOWED BY ANOTHER STATEMENT
                  
             if(chars[i]=='('&&i+1==chars.length||chars[i]==' '&&+1==chars.length)
                break;
            else if(chars[i+1]=='('&&i!=chars.length
                     ||chars[i+1]==' '&&i!=chars.length){
                 i++;
                
                 id="";
                 flag=0;
              
             }
             else{
               
                id="";
                flag=0;//CHECK NEXT IF DELIMITER IS NOT AN OPERATOR
             // checker=99;
              
             }
              ////END OF LOGIC
                }
              //break;
            }
            //===========================================================
            else{
               i++;
               // System.out.print("chedhdj"+chars[i]);
             //  check=0;
            }
                 }//IF RESERVED SYMBOL
          
             
            if(IdentifierCount<=32)
               check=0;
            else{
               ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. Identifier characters exceeds the 31 limit.");
              break;}
            }//if
            
            /**
            else if(chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
                    chars[i]=='%'||chars[i]=='!'||chars[i]=='<'||chars[i]=='>'||
                    chars[i]=='('||chars[i]==')'||chars[i]==';'||chars[i]==','||
                    chars[i]=='{'||chars[i]==' '||chars[i]=='\n'||chars[i]=='='
                    ||chars[i]=='['){
            check=1;
           
            checker=0;
            //RESERVED OPERATORS========================================
            if(chars[i]=='='||chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
            chars[i]=='%'||chars[i]=='<'||chars[i]=='>'||chars[i]=='!')
            {
                if(chars[i]=='+'&&chars[i+1]=='+'||
                   chars[i]=='-'&&chars[i+1]=='-'||
                   chars[i+1]=='='||chars[i]=='<'&&chars[i+1]=='<'||
                   chars[i]=='>'&&chars[i+1]=='>'){
              list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i])); 
              id = id.concat(String.valueOf(chars[i+1])); 
              System.out.print("HERE:"+id);
              list.add(new Lexical(id, id));
              i++;
              checker=1;
              System.out.print("HERE:"+chars[i+1]);
                if(chars[i+1]==';'){
                  id="";
                  flag=0;
              }
                }
                else{
              list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i]));
              list.add(new Lexical(id, id));
              i++;
              checker=1; }
              //break;
            }
            //===========================================================
           else
                i++;
              if(i==(chars.length)&&checker==0){
                  list.add(new Lexical(id,"identifier"));
                break;
                }
              else if(i==(chars.length)&&checker==1){
                  //list.add(new Lexical(id,"identifier"));
                break;
                }
              else if(checker==1){
                 flag=0;
                id="";
                
                System.out.print("checker"+chars[i]);
                break; 
              }
              else if(checker==0){
                list.add(new Lexical(id,"identifier"));
                
               flag=0;
                id="";
                break;}
                 }**/
            /**
            else if(chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
          chars[i]=='%'||chars[i]=='!'||chars[i]=='<'||chars[i]=='>'||
                    chars[i]=='('||chars[i]==')'||chars[i]==';'||chars[i]==','||
                    chars[i]=='{'||chars[i]==' '||chars[i]=='\n'||chars[i]=='='||
                   chars[i]=='['){//DELIMITER
               //IF RESERVED WORD IS SLIGHTLY SIMILAR TO IDENTIFIER
                check=1;
            checker=0;
 //RESERVED OPERATORS========================================
            if(chars[i]=='='||chars[i]=='+'||chars[i]=='-'||chars[i]=='*'||chars[i]=='/'||
            chars[i]=='%'||chars[i]=='<'||chars[i]=='>'||chars[i]=='!')
            {
                //IF OUTPUT IS A+
              if(i+1==chars.length) {  
               list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i]));
              list.add(new Lexical(id, id));
              break;
              }
               else if(chars[i]=='+'&&chars[i+1]=='+'||
                   chars[i]=='-'&&chars[i+1]=='-'||
                   chars[i+1]=='='||chars[i]=='<'&&chars[i+1]=='<'||
                   chars[i]=='>'&&chars[i+1]=='>'){
                  
              list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i])); 
              id = id.concat(String.valueOf(chars[i+1])); 
            
              list.add(new Lexical(id, id));
              i++;
              checker=1;
              //LOGIC: IF A++ IS/IS NOT FOLLOWED BY ANOTHER STATEMENT
              if(i+1==chars.length)       
              break;
             else if(chars[i+1]==';'&&i==chars.length||chars[i+1]==')'&&i==chars.length||chars[i+1]==' '&&i==chars.length)
                 break;
             else if(chars[i+1]==';'&&i!=chars.length||chars[i+1]==')'&&i!=chars.length
                     ||chars[i+1]==' '&&i!=chars.length){
                 i = i+2;
                
                 id="";
                 flag=0;
              
             }
             else{
                 i = i+2;
                 id="";
                 flag=0;
              
             }
              ////END OF LOGIC
                 
                }
              else {
                   
                
              list.add(new Lexical(id,"identifier"));
              id="";
              id = id.concat(String.valueOf(chars[i]));
              list.add(new Lexical(id, id));
              
              i++;
              checker=1;
               System.out.print("I: "+i+" CHARSL: "+chars.length+" CHARS: "+chars[i]);
                //LOGIC: IF A++ IS/IS NOT FOLLOWED BY ANOTHER STATEMENT
                  
             if(chars[i]=='('&&i+1==chars.length||chars[i]==' '&&+1==chars.length)
                break;
            else if(chars[i+1]=='('&&i!=chars.length
                     ||chars[i+1]==' '&&i!=chars.length){
                 i++;
                
                 id="";
                 flag=0;
              
             }
             else{
               
                id="";
                flag=0;//CHECK NEXT IF DELIMITER IS NOT AN OPERATOR
             // checker=99;
              
             }
              ////END OF LOGIC
                }
              //break;
            }
            //===========================================================
            else{
               i++;
               // System.out.print("chedhdj"+chars[i]);
             //  check=0;
            }
                 }//IF RESERVED SYMBOL
          
       
             else{//ERROR TRAP FOR DELIMITER OF Identifier
                ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. '"+chars[i]+"' is not a valid delimiter.");
             break;
                 }**/
          }

      if(flag==9)
          list.add(new Lexical("error","error"));
          
   //LORZANO BEATRIZ 2018
      }///if flag =3 
      
       else if(flag==9){
         ErrorTxt.setText("<body style=\"font-family: "+fontfamily+"\"> Error on <span style=\"color:red\">"+id+""
                             + "</span>. It is not a valid character for a reserved word, symbol, or identifier.");
          list.add(new Lexical("error","error"));
          
      }
       else if(flag==8){
           break;
       }
        else if(flag==0){System.out.print("FLAGZERO");
          continue; }
       else
          list.add(new Lexical("error","error"));
      
      if(flag==0){
          System.out.print("Cont:"+flag);
         //break gohere;
      }
  
     } //if flag =0 ---the program will check again
      
     int size = list.size();
    //   System.out.print(size);
        return list;
        
 
    
    }
    
    //function to clear Table
    
    private void RunBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RunBtnMouseClicked
        // TODO add your handling code here
      //clear data 
      ErrorTxt.setText(null);
      
     //populate LexicalTbl
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) LexicalTbl.getModel();
        model.setRowCount(0);
        
        ArrayList<Lexical> list = ListLexical();
        Object rowData[] = new Object[list.size()];
     //    System.out.print(list.size());
        for(int i = 1; i <list.size(); i++)
        {
            rowData[0] = list.get(i).Lexeme;
            rowData[1] = list.get(i).Token;
         
            model.addRow(rowData);
        }
        
    }//GEN-LAST:event_RunBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearBtn;
    private javax.swing.JEditorPane ErrorTxt;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JTable LexicalTbl;
    private javax.swing.JButton RunBtn;
    private javax.swing.JTextArea SourceTxt;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane5;
    // End of variables declaration//GEN-END:variables
}
